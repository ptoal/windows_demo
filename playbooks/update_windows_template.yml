---
- name: Temporarily hard-code data
  hosts: templates
  gather_facts: false

  tasks:
  - name: Set some facts
    ansible.builtin.set_fact:
      vmware_guest_name: "{{ inventory_hostname }}"
      vmware_datacenter_name: "SagelyDC"
      vmware_cluster_name: "HighPower"

- name: Prepare Template for Update
  hosts: templates
  gather_facts: false
  module_defaults:
    group/vmware:
      datacenter: "{{ vmware_datacenter_name }}"

  tasks:
    - name: Template converted to VM
      community.vmware.vmware_guest:
        cluster: "{{ vmware_cluster_name }}"
        name: "{{ vmware_guest_name }}"
        folder: "{{ vcenter_folder }}"
        is_template: false
        state: present
      delegate_to: localhost

    - name: VM powered on
      community.vmware.vmware_guest:
        name: "{{ vmware_guest_name }}"
        state: powered-on
        networks:
          - name: mgmt
            ip: "{{ template_vm_ip_address }}"
            netmask: "{{ template_vm_netmask }}"
            gateway: "{{ template_vm_gateway }}"
            domain: "{{ template_vm_domain }}"
            dns_servers:
              - "{{ template_vm_dns_servers }}"
        customization:
          autologon: true
          orgname: Ansible
          fullname: ansible
          existing_vm: true
          password: "{{ ansible_password }}"
          dns_servers: "{{ item.dns_servers|default([]) }}"
          runonce:
            - powershell.exe -command "& $([scriptblock]::\
              Create((New-Object Net.WebClient).DownloadString\
              ('https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1'))) -ForceNewSSLCert -EnableCredSSP"
            - winrm set winrm/config/service/auth @{CredSSP="true"}
            - netsh advfirewall set allprofiles state off
      register: deploy
      delegate_to: localhost

    - name: Waiting for servers to come online
      ansible.builtin.wait_for:
        host: "{{ template_vm_ip_address }}"
        port: 5986
        timeout: "{{ instance_wait_connection_timeout }}"
      delegate_to: localhost


- name: update windows systems
  hosts: templates
  gather_facts: true
  become: false
  vars:
    win_update_category_names:
      - CriticalUpdates
      - DefinitionUpdates
      - SecurityUpdates
      - UpdateRollups
      - Updates

  roles:
    - oatakan.windows_update


- name: VM is powered down and converted to template
  hosts: templates
  gather_facts: false
  module_defaults:
    group/vmware:
      datacenter: "{{ vmware_datacenter_name }}"

  tasks:
    - name: create scheduled task to delete WinRM listeners and shutdown
      community.windows.win_scheduled_task:
        name: sysprep-shutdown
        username: SYSTEM
        disallow_start_if_on_batteries: false
        stop_if_going_on_batteries: false
        actions:
          - path: powershell.exe
            arguments: Remove-Item -Path WSMan:\localhost\Listener\* -Recurse -Force
          - path: shutdown.exe
            arguments: /s /t 10 /f /d p:4:1 /c "Ansible Shutdown"

    - name: set flag to recreate pagefile after next sysprep
      ansible.windows.win_shell: |
        $system = Get-WmiObject -Class Win32_ComputerSystem -EnableAllPrivileges
        if ($system -ne $null) {
            $system.AutomaticManagedPagefile = $true
            $system.Put()
        }

    - name: Wait for the virtual machine to shutdown
      community.vmware.vmware_guest_powerstate:
        name: "{{ vmware_guest_name }}"
        state: shutdown-guest
        state_change_timeout: 200
      register: deploy
      delegate_to: localhost

    - name: convert to template
      community.vmware.vmware_guest:
        name: "{{ vmware_guest_name }}"
        is_template: true
        state: present
      delegate_to: localhost
