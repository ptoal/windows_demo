---
- name: Temporarily hard-code data
  hosts: templates
  gather_facts: false

  tasks:
  - name: Set some facts
    ansible.builtin.set_fact:
      vmware_guest_name: "{{ inventory_hostname }}"
      vmware_datacenter_name: "SagelyDC"
      vmware_cluster_name: "HighPower"
      
- name: Prepare Template for Update
  hosts: templates
  gather_facts: false
  module_defaults:
    group/vmware:
      datacenter: "{{ vmware_datacenter_name }}"

  tasks:
    - name: Template converted to VM
      community.vmware.vmware_guest:
        cluster: "{{ vmware_cluster_name }}"
        name: "{{ vmware_guest_name }}"
        is_template: no
        state: present
      delegate_to: localhost

    - name: VM powered on
      community.vmware.vmware_guest:
        name: "{{ vmware_guest_name }}" 
        state: powered-on
        networks:
          - name: mgmt
            ip: "{{ template_vm_ip_address }}"
            netmask: "{{ template_vm_netmask }}"
            gateway: "{{ template_vm_gateway }}"
            domain: "{{ template_vm_domain }}"
            dns_servers:
            - "{{ template_vm_dns_servers }}"
        customization:
          autologon: True
          orgname: Ansible
          fullname: ansible
          existing_vm: True
          password: "{{ ansible_password }}"
          dns_servers: "{{ item.dns_servers|default([]) }}"
          runonce:
            - powershell.exe -command "& $([scriptblock]::Create((New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1'))) -ForceNewSSLCert -EnableCredSSP"
            - winrm set winrm/config/service/auth @{CredSSP="true"}
            - netsh advfirewall set allprofiles state off
      register: deploy
      delegate_to: localhost
    
- name: Perform Windows Updates
  hosts: templates
  gather_facts: false
  module_defaults:
    group/vmware:
      datacenter: "{{ vmware_datacenter_name }}"

  tasks:
    - name: Gather information about VM
      community.vmware.vmware_guest_info:
        name: "{{ vmware_guest_name }}"
      register: windows_guest_info
      delegate_to: localhost
    
    - name: Host is up
      ansible.builtin.wait_for:
        host: "{{ template_vm_ip_address }}"
        port: "{{ ansible_port }}"
        timeout: 300
      delegate_to: localhost

- name: update windows systems
  hosts: templates
  gather_facts: True
  become: no
  vars:
    win_update_category_names:
      - CriticalUpdates
      - DefinitionUpdates
      - SecurityUpdates
      - UpdateRollups
      - Updates
            
  roles:
    - oatakan.windows_update


- name: VM is powered down and converted to template
  hosts: templates
  gather_facts: false
  module_defaults:
    group/vmware:
      datacenter: "{{ vmware_datacenter_name }}"

  tasks:
    - name: Wait for the virtual machine to shutdown
      community.vmware.vmware_guest_powerstate:
        name: "{{ vmware_guest_name }}"
        state: shutdown-guest
        state_change_timeout: 200
      register: deploy
      delegate_to: localhost

    - name: convert to template
      community.vmware.vmware_guest:
        name: "{{ vmware_guest_name }}"
        is_template: yes
        state: present
      delegate_to: localhost

